{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Factual Specification",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#punctuation"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#booleans"
		},
		{
			"include": "#types"
		},
		{
			"include": "#predecessors"
		},
		{
			"include": "#properties"
		},
		{
			"include": "#identifiers"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.other.factual",
					"match": "\\b(let|fact|authorization|distribution|subscription|purge)\\b"
				}
			]
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.factual",
					"match": ":|->|=>|#|=|\\.|!E|!|\\bE\\b|\\*|\\?|,"
				}
			]
		},
		"punctuation": {
			"patterns": [
				{
					"name": "punctuation.definition.factual",
					"match": "[()\\[\\]{}]"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.factual",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.factual",
					"match": "\\\\."
				}
			]
		},
		"numbers": {
			"patterns": [
				{
					"name": "constant.numeric.factual",
					"match": "-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b"
				}
			]
		},
		"booleans": {
			"patterns": [
				{
					"name": "constant.language.boolean.factual",
					"match": "\\b(?:false|true)\\b"
				}
			]
		},
		"types": {
			"patterns": [
				{
					"name": "entity.name.type.factual",
					"match": "(?<=\\bfact\\s+|:\\s*)\\b[a-zA-Z_][\\.a-zA-Z0-9_]*\\b"
				},
				{
					"name": "support.type.datetime.factual",
					"match": "\\bdatetime\\b"
				},
				{
					"name": "support.type.string.factual",
					"match": "\\bstring\\b"
				},
				{
					"name": "support.type.number.factual",
					"match": "\\bnumber\\b"
				},
				{
					"name": "support.type.boolean.factual",
					"match": "\\bboolean\\b"
				}
			]
		},
		"predecessors": {
			"patterns": [
				{
					"name": "entity.name.function.factual",
					"match": "(?<=->\\s*)[a-zA-Z_][a-zA-Z0-9_]*"
				}
			]
		},
		"properties": {
			"patterns": [
				{
					"name": "variable.other.property.factual",
					"match": "(?<=\\.\\s*)[a-zA-Z_][a-zA-Z0-9_]*"
				}
			]
		},
		"identifiers": {
			"patterns": [
				{
					"name": "variable.parameter.factual",
					"match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
				}
			]
		}
	},
	"scopeName": "source.factual"
}
